import boto3
import subprocess

def push_docker_image_to_ecr(image_name, repository_name, region):
    ecr_client = boto3.client('ecr', region_name=region)

    # Get login command from ECR and execute it
    auth_token = ecr_client.get_authorization_token()
    username, password = base64.b64decode(auth_token['authorizationData'][0]['authorizationToken']).decode().split(':')
    registry = auth_token['authorizationData'][0]['proxyEndpoint']
    subprocess.run(f"$(aws ecr get-login --no-include-email --region {region})", shell=True)

    # Tag and push the image
    subprocess.run(f"docker tag {image_name} {registry}/{repository_name}", shell=True)
    subprocess.run(f"docker push {registry}/{repository_name}", shell=True)

def update_ecs_service(cluster_name, service_name, region):
    ecs_client = boto3.client('ecs', region_name=region)

    # Update the service to use the new task definition
    ecs_client.update_service(
        cluster=cluster_name,
        service=service_name,
        forceNewDeployment=True
    )

def main():
    region = 'your-region'
    image_name = 'your-image-name'
    repository_name = 'your-repository-name'
    cluster_name = 'your-cluster-name'
    service_name = 'your-service-name'

    push_docker_image_to_ecr(image_name, repository_name, region)
    update_ecs_service(cluster_name, service_name, region)

if __name__ == "__main__":
    main()
